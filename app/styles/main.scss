// bower:scss
@import 'bower_components/font-awesome/scss/font-awesome.scss';

// endbower
///////////////////////////// CSS Reset //////////////////////////////////
// http://meyerweb.com/eric/tools/css/reset/
//   v2.0 | 20110126
//   License: none (public domain)
//
*,
*::after,
*::before {
  box-sizing: border-box;
}

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}
// HTML5 display-role reset for older browsers
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before, blockquote:after,
  q:before,
  q:after {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}
///////////////////////////// Variables //////////////////////////////////

// Colors
$white: #f4f4f4;
$black: #4d4d4d;
$grey: (
  superlight: #ebebeb,
  light: #b7b7b7,
  mid: #9c9c9c,
  dark: #7f7f7f,
);
$orange: (
  light: #ff9b43,
  mid: #f07100,
  dark: #d95d02,
);
$red: (
  light: #f78a78,
  mid: #f46048,
  dark: #c83c25,
);
$green: (
  light: #82c5a3,
  mid: #319663,
  dark: #175f3a,
);
$blue: (
  light: #73bef0,
  mid: #3e98d3,
  dark: #0878c2,
);

// Fonts
$tenso: "tenso", sans-serif;
$lexia: "lexia", serif;

///////////////////////////// Structure //////////////////////////////
// General
html {
  font-size: 16px;
  line-height: 27px;
}

body {
  background: $white;
  color: $black;
  font-family: $lexia;
  font-size: 2vw;
  line-height: 1.6em;
  margin: 0;
}


.browserupgrade {
  background: map-get($grey, light);
  color: $black;
  margin: .2em 0;
  padding: .2em 0;
}

.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

/////////////////////////////Grid Begins
// breakpoints map
$breakpoints: (
  m: 30rem,
  d: 64rem,
  lg: 96rem
);

// media query mixin
@mixin break($size) {
  @media (min-width: map-get($breakpoints, $size)) {
    @content;
  }
}

// number of columns variable
$items: 6;

// grid container
.l-grid {
  display: flex;
  flex-flow: row wrap;
  margin-bottom: 1rem;
}

.l-stretch {
  align-items: stretch;
}

// loop over the breakpoints
@each $key, $value in $breakpoints {
  @for $i from 1 through $items {
    .l-#{$key}-col-#{$i} {
      flex: 0 0 100%;
      @include break($key) {
        flex: 0 0 #{$i / $items * 100%};
      }
    }
  }
}
//////////////////////////////Grid Ends
//Main Menu Styles
#main-nav {
  background-color: map-get($blue, mid);
  font-family: $tenso;
  font-size: 1.25rem;
  font-weight: bold;
  height: 100%;
  letter-spacing: .07em;
  line-height: 1em;
  overflow-y: auto;
  position: fixed;
  width: 300px;
  z-index: 10;

  ul {
    list-style: none;
    margin: 0;
    padding: 0;

    li {
      border-right: 1rem solid map-get($blue, mid);
      display: block;
      width: 100%;

      &:hover {
        background-color: $white;
        border-right-color: map-get($blue, dark);

        a {
          color: map-get($green, mid);
        }
      }

      a, button {
        border-bottom: 1px solid $white;
        color: $white;
        display: block;
        outline: none;
        padding: 1.25rem 1rem;
        text-decoration: none;
        text-transform: uppercase;
        line-height: 1em;

        i {
          float: right;
          font-size: 1.875rem;
          text-align: right;
          margin-top: -.2em;
        }
      }

      &#menu-toggle {
        background-color: #278acc;
        border-bottom: 0;
        border-right: 1rem solid map-get($blue, dark);
        display: block;

        button {
          background: transparent;
          border: 0;
          border-radius: 0;
          cursor: pointer;
          font-family: $tenso;
          font-size: 1em;
          padding-right: .28em;
          text-align: left;
          width: 100%;

          &:hover {
            background-color: $white;
            color: map-get($green, mid);
          }

          i {
            font-size: 2.5rem;
          }
        }
      }
    }
  }

  &.open {
    left: 0;

    ~ main {
      margin-left: 300px;
    }
  }

  &.closed {
    left: -210px;

    ~ main {
      margin-left: 90px;
    }
  }
}

.l-right {
  float: right;
}

.l-left {
  float: left;
}

// Text layouts
.l-text-right {
  text-align: right;
}

.l-text-left {
  text-align: left;
}

.l-text-center {
  text-align: center;
}

///////////////////////////////Components
.c-tagline {
  font-size: .7em;
  margin-bottom: 1.25em;
}

//Main Content Area
main {
  padding: 1em;
  z-index: 5;

  p {
    margin-bottom: 1em;
  }
}
//Contact Form
#contact-form {
  background-color: map-get($grey, mid);
  bottom: 0;
  position: fixed;
  top: 0;
  width: 50vw;
  z-index: 10;

  &.closed {
    right: -50vw;
  }

  &.open {
    right: 0;
  }
}

///////////////////////////////Media Queries
